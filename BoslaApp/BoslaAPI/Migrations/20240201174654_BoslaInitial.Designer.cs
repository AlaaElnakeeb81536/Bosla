// <auto-generated />
using System;
using BoslaAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoslaAPI.Migrations
{
    [DbContext(typeof(BoslaDbContext))]
    [Migration("20240201174654_BoslaInitial")]
    partial class BoslaInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BoslaAPI.Models.Child", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR");

                    b.Property<int>("Age")
                        .HasColumnType("INT");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("ProfileImage")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("RelativeName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("RelativePhone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Children", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Playground Lane",
                            Age = 8,
                            Gender = "Female",
                            Name = "Emily Doe",
                            ProfileImage = "child_profile1.jpg",
                            RelativeName = "John Doe",
                            RelativePhone = "555-5678"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Toy Street",
                            Age = 5,
                            Gender = "Male",
                            Name = "Jacob Smith",
                            ProfileImage = "child_profile2.jpg",
                            RelativeName = "Jane Smith",
                            RelativePhone = "555-4321"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Fun Avenue",
                            Age = 7,
                            Gender = "Female",
                            Name = "Olivia Johnson",
                            ProfileImage = "child_profile3.jpg",
                            RelativeName = "Bob Johnson",
                            RelativePhone = "555-2222"
                        },
                        new
                        {
                            Id = 4,
                            Address = "987 Playful Road",
                            Age = 6,
                            Gender = "Male",
                            Name = "Liam Turner",
                            ProfileImage = "child_profile4.jpg",
                            RelativeName = "Lisa Turner",
                            RelativePhone = "555-4444"
                        });
                });

            modelBuilder.Entity("BoslaAPI.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Doctors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dr. John Doe",
                            Phone = "123-456-7890",
                            Specialization = "diabetes"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dr. Jane Smith",
                            Phone = "987-654-3210",
                            Specialization = "heart diseases"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dr. Alice Johnson",
                            Phone = "555-123-4567",
                            Specialization = "alzheimer"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Dr. Rebert Soll",
                            Phone = "555-852-4567",
                            Specialization = "autism"
                        });
                });

            modelBuilder.Entity("BoslaAPI.Models.MedicalHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Diagnose")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("PatId")
                        .HasColumnType("int");

                    b.Property<string>("Prescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("PatId");

                    b.ToTable("MedicalHistories", (string)null);
                });

            modelBuilder.Entity("BoslaAPI.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR");

                    b.Property<int>("Age")
                        .HasColumnType("INT");

                    b.Property<string>("AllergicFoods")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("BloodType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Disease")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("DrId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("ProfileImage")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("RelativeName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("RelativePhone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("DrId");

                    b.ToTable("Patients", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main Street",
                            Age = 30,
                            AllergicFoods = "Peanuts, Shellfish",
                            BloodType = "O+",
                            Disease = "Diabetes",
                            DrId = 1,
                            Gender = "Male",
                            Name = "John Doe",
                            Phone = "555-1234",
                            ProfileImage = "profile1.jpg",
                            RelativeName = "Jane Doe",
                            RelativePhone = "555-5678"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Oak Avenue",
                            Age = 45,
                            AllergicFoods = "Dairy, Gluten",
                            BloodType = "A-",
                            Disease = "Heart Disease",
                            DrId = 2,
                            Gender = "Female",
                            Name = "Jane Smith",
                            Phone = "555-9876",
                            ProfileImage = "profile2.jpg",
                            RelativeName = "John Smith",
                            RelativePhone = "555-4321"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Pine Lane",
                            Age = 28,
                            AllergicFoods = "Tree Nuts, Soy",
                            BloodType = "AB+",
                            Disease = "Alzheimer",
                            DrId = 3,
                            Gender = "Female",
                            Name = "Alice Johnson",
                            Phone = "555-1111",
                            ProfileImage = "profile3.jpg",
                            RelativeName = "Bob Johnson",
                            RelativePhone = "555-2222"
                        },
                        new
                        {
                            Id = 4,
                            Address = "987 Cedar Street",
                            Age = 35,
                            AllergicFoods = "Eggs, Fish",
                            BloodType = "B-",
                            Disease = "Autism",
                            DrId = 4,
                            Gender = "Male",
                            Name = "Mason Turner",
                            Phone = "555-3333",
                            ProfileImage = "profile4.jpg",
                            RelativeName = "Lisa Turner",
                            RelativePhone = "555-4444"
                        },
                        new
                        {
                            Id = 5,
                            Address = "654 Birch Avenue",
                            Age = 22,
                            AllergicFoods = "Milk, Wheat",
                            BloodType = "O-",
                            Disease = "Diabetes",
                            DrId = 1,
                            Gender = "Female",
                            Name = "Sophia White",
                            Phone = "555-5555",
                            ProfileImage = "profile5.jpg",
                            RelativeName = "David White",
                            RelativePhone = "555-6666"
                        },
                        new
                        {
                            Id = 6,
                            Address = "321 Elm Road",
                            Age = 40,
                            AllergicFoods = "Shellfish, Peanuts",
                            BloodType = "A+",
                            Disease = "Heart Disease",
                            DrId = 2,
                            Gender = "Male",
                            Name = "Elijah Brown",
                            Phone = "555-7777",
                            ProfileImage = "profile6.jpg",
                            RelativeName = "Sarah Brown",
                            RelativePhone = "555-8888"
                        });
                });

            modelBuilder.Entity("BoslaAPI.Models.MedicalHistory", b =>
                {
                    b.HasOne("BoslaAPI.Models.Patient", "Patient")
                        .WithMany("MedicalHistories")
                        .HasForeignKey("PatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("BoslaAPI.Models.Patient", b =>
                {
                    b.HasOne("BoslaAPI.Models.Doctor", "Doctor")
                        .WithMany("Patients")
                        .HasForeignKey("DrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("BoslaAPI.Models.Doctor", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("BoslaAPI.Models.Patient", b =>
                {
                    b.Navigation("MedicalHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
